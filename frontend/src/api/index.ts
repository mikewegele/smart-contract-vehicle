/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * SmartContractVehicle
 * OpenAPI spec version: 1.0
 */
import { api } from './axios-config';
export interface Address {
  id?: number;
  /**
   * @minLength 0
   * @maxLength 10
   * @nullable
   */
  extraInfo?: string | null;
  /**
   * @minLength 0
   * @maxLength 50
   * @nullable
   */
  floor?: string | null;
  houseNumber: number;
  /**
   * @minLength 0
   * @maxLength 50
   */
  street: string;
  /**
   * @minLength 0
   * @maxLength 50
   */
  city: string;
  /**
   * @minLength 0
   * @maxLength 15
   */
  postalCode: string;
  /**
   * @minLength 0
   * @maxLength 110
   */
  country: string;
}

export interface RegisterTO {
  /** @minLength 1 */
  email: string;
  /** @minLength 6 */
  password: string;
  /** @minLength 1 */
  name: string;
}

export interface User {
  /** @nullable */
  id?: string | null;
  /** @nullable */
  userName?: string | null;
  /** @nullable */
  normalizedUserName?: string | null;
  /** @nullable */
  email?: string | null;
  /** @nullable */
  normalizedEmail?: string | null;
  emailConfirmed?: boolean;
  /** @nullable */
  passwordHash?: string | null;
  /** @nullable */
  securityStamp?: string | null;
  /** @nullable */
  concurrencyStamp?: string | null;
  /** @nullable */
  phoneNumber?: string | null;
  phoneNumberConfirmed?: boolean;
  twoFactorEnabled?: boolean;
  /** @nullable */
  lockoutEnd?: string | null;
  lockoutEnabled?: boolean;
  accessFailedCount?: number;
  /** @minLength 1 */
  name: string;
  isAdmin?: boolean;
  isRenter?: boolean;
  isLessor?: boolean;
}

export type GetParams = {
id?: number;
};

export type DeleteApiAddressDeleteParams = {
id?: number;
};

export type PostApiAuthRegisterRegisterParams = {
Email: string;
Password: string;
Name: string;
};

export type PostApiAuthLoginLoginParams = {
Email: string;
Password: string;
};

export type GetApiUserGetParams = {
id?: number;
};

export type DeleteApiUserDeleteParams = {
id?: number;
};

export const getSmartContractVehicle = () => {
const get = (
    params?: GetParams,
 ) => {
      return api<void>(
      {url: `/api/Address/Get`, method: 'GET',
        params
    },
      );
    }
  
const deleteApiAddressDelete = (
    params?: DeleteApiAddressDeleteParams,
 ) => {
      return api<void>(
      {url: `/api/Address/Delete`, method: 'DELETE',
        params
    },
      );
    }
  
const postApiAddressPost = (
    address: Address,
 ) => {
      return api<void>(
      {url: `/api/Address/Post`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: address
    },
      );
    }
  
const patchApiAddressUpdate = (
    address: Address,
 ) => {
      return api<void>(
      {url: `/api/Address/Update`, method: 'PATCH',
      headers: {'Content-Type': 'application/json', },
      data: address
    },
      );
    }
  
const postApiAuthRegisterRegister = (
    params: PostApiAuthRegisterRegisterParams,
 ) => {
      return api<void>(
      {url: `/api/Auth/Register/register`, method: 'POST',
        params
    },
      );
    }
  
const postApiAuthLoginLogin = (
    params: PostApiAuthLoginLoginParams,
 ) => {
      return api<void>(
      {url: `/api/Auth/Login/login`, method: 'POST',
        params
    },
      );
    }
  
const postApiAuthLogoutLogout = (
    
 ) => {
      return api<void>(
      {url: `/api/Auth/Logout/logout`, method: 'POST'
    },
      );
    }
  
const getApiUserGet = (
    params?: GetApiUserGetParams,
 ) => {
      return api<void>(
      {url: `/api/User/Get`, method: 'GET',
        params
    },
      );
    }
  
const deleteApiUserDelete = (
    params?: DeleteApiUserDeleteParams,
 ) => {
      return api<void>(
      {url: `/api/User/Delete`, method: 'DELETE',
        params
    },
      );
    }
  
const postApiUserRegister = (
    registerTO: RegisterTO,
 ) => {
      return api<void>(
      {url: `/api/User/Register`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: registerTO
    },
      );
    }
  
const patchApiUserUpdate = (
    user: User,
 ) => {
      return api<void>(
      {url: `/api/User/Update`, method: 'PATCH',
      headers: {'Content-Type': 'application/json', },
      data: user
    },
      );
    }
  
return {get,deleteApiAddressDelete,postApiAddressPost,patchApiAddressUpdate,postApiAuthRegisterRegister,postApiAuthLoginLogin,postApiAuthLogoutLogout,getApiUserGet,deleteApiUserDelete,postApiUserRegister,patchApiUserUpdate}};
export type GetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['get']>>>
export type DeleteApiAddressDeleteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['deleteApiAddressDelete']>>>
export type PostApiAddressPostResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['postApiAddressPost']>>>
export type PatchApiAddressUpdateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['patchApiAddressUpdate']>>>
export type PostApiAuthRegisterRegisterResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['postApiAuthRegisterRegister']>>>
export type PostApiAuthLoginLoginResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['postApiAuthLoginLogin']>>>
export type PostApiAuthLogoutLogoutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['postApiAuthLogoutLogout']>>>
export type GetApiUserGetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['getApiUserGet']>>>
export type DeleteApiUserDeleteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['deleteApiUserDelete']>>>
export type PostApiUserRegisterResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['postApiUserRegister']>>>
export type PatchApiUserUpdateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSmartContractVehicle>['patchApiUserUpdate']>>>
